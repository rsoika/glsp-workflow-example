"use strict";
/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var types_1 = require("../../base/types");
var bounds_manipulation_1 = require("./bounds-manipulation");
var hidden_bounds_updater_1 = require("./hidden-bounds-updater");
var layout_1 = require("./layout");
var command_registration_1 = require("../../base/commands/command-registration");
var hbox_layout_1 = require("./hbox-layout");
var vbox_layout_1 = require("./vbox-layout");
var stack_layout_1 = require("./stack-layout");
var boundsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, bounds_manipulation_1.SetBoundsCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, bounds_manipulation_1.RequestBoundsCommand);
    bind(hidden_bounds_updater_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(hidden_bounds_updater_1.HiddenBoundsUpdater);
    bind(types_1.TYPES.Layouter).to(layout_1.Layouter).inSingletonScope();
    bind(types_1.TYPES.LayoutRegistry).to(layout_1.LayoutRegistry).inSingletonScope();
    layout_1.configureLayout({ bind: bind, isBound: isBound }, vbox_layout_1.VBoxLayouter.KIND, vbox_layout_1.VBoxLayouter);
    layout_1.configureLayout({ bind: bind, isBound: isBound }, hbox_layout_1.HBoxLayouter.KIND, hbox_layout_1.HBoxLayouter);
    layout_1.configureLayout({ bind: bind, isBound: isBound }, stack_layout_1.StackLayouter.KIND, stack_layout_1.StackLayouter);
});
exports.default = boundsModule;
//# sourceMappingURL=di.config.js.map